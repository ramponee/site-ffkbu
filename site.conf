
{
  hostname_prefix = 'freifunk-',

  site_name = 'Freifunk KBU',

  -- Shorthand of the community.
  site_code = 'ffkbu',
  opkg_repo = 'http://openwrt.draic.info/barrier_breaker/14.07/%S/packages',

  -- Prefixes used within the mesh. Both are required.
  prefix4 = '10.158.0.0/16',
  prefix6 = 'fdd3:5d16:b5dd::/48',

  -- Timezone of your community.
  -- See http://wiki.openwrt.org/doc/uci/system#time_zones
  timezone = 'CET-1CEST,M3.5.0,M10.5.0/3',

  -- Needs more, direct ipv6 ntp servers
  -- Must be reachable using IPv6!

  ntp_servers = {'2.pool.ntp.org'},

  -- Wireless regulatory domain of your community.
  regdom = 'DE',

  -- Wireless configuration for 2.4 GHz interfaces.
  wifi24 = {
    -- Wireless channel.
    channel = 1,

    -- ESSID used for client network.
    ssid = 'freifunk.net',

    -- Specifies the channel width in 802.11n and 802.11ac mode.
    -- Possible values are:
    -- HT20 (single 20MHz channel),
    -- HT40- (2x 20MHz channels, secondary below)
    -- HT40+ (2x 20MHz channels, secondary above)
    htmode = 'HT40+',

    -- Adjust these values!
    mesh_ssid = 'wifimesh-kbu',  -- ESSID used for mesh
    mesh_bssid = '02:d1:11:37:fc:39', -- BSSID used for mesh

    -- Bitrate used for multicast/broadcast packets.
    mesh_mcast_rate = 12000,

    -- (optional) mesh VLAN on 802.11 ad-hoc interface (1-4095)
    -- mesh_vlan = 14,
    -- client_disabled = true,
    -- mesh_disabled = false,
  },

  -- Wireless configuration for 5 GHz interfaces.
  -- This should be equal to the 2.4 GHz variant, except
  -- for channel and htmode.
  wifi5 = {
    ssid = 'freifunk.net',
    channel = 44,
    htmode = 'HT40+',
    mesh_ssid = 'wifimesh-kbu-5ghz',  -- ESSID used for mesh
    mesh_bssid = '02:d1:11:37:fc:59', -- BSSID used for mesh
    mesh_mcast_rate = 12000,
    -- mesh_vlan = 14,
    -- client_disabled = true,
    -- mesh_disabled = false,
  },

  -- The next node feature allows clients to always reach the node it is
  -- connected to using a known IP address.
  next_node = {
    -- anycast IPs of all nodes
    ip4 = '10.158.254.254',
    ip6 = 'fdd3:5d16:b5dd::fefe',

    -- anycast MAC of all nodes
    mac = '16:42:23:20:15:69',
  },

  -- Refer to http://fastd.readthedocs.org/en/latest/ to better understand
  -- what these options do.
  fastd_mesh_vpn = {
    methods = {'salsa2012+umac'},
    enabled = true,
    configurable = true,
    mtu = 1312,
    groups = {
      backbone = {
        limit = 2,
        peers = {
          peer1 = {
            key = 'ae120edbbd07dce57c2ed6ebefd112886a1416322e7a98352866eed1e0d633cc',
            remotes = {'ipv6 "vpn1.kbu.freifunk.net" port 10010',
                       'ipv4 "vpn1.kbu.freifunk.net" port 10010'
                      },
          },
          peer2 = {
            key = '3e01de6c771cf5a50375de4f05e51f7d9251b5659ab9fb54040bf41df411ae46',
            remotes = {'ipv6 "vpn2.kbu.freifunk.net" port 10010',
                       'ipv4 "vpn2.kbu.freifunk.net" port 10010'
                      },
          },
          peer3 = {
            key = 'c46d7e141b60be6e57ada3087f1b25beb0bfb51e6b42d1c7f02a067d89c13a1a',
            remotes = {'ipv6 "vpn3.kbu.freifunk.net" port 10010',
                       'ipv4 "vpn3.kbu.freifunk.net" port 10010'
                      },
          },
          peer4 = {
            key = 'f4aff2422921822102ed6e67807b0b5db334f04e071356d30fe6c927b8bb9839',
            remotes = {'ipv6 "vpn4.kbu.freifunk.net" port 10010',
                       'ipv4 "vpn4.kbu.freifunk.net" port 10010'
                      },
          },
          peer5 = {
            key = 'a6df938cfde83b437346c91e2e548516a25321fb72820f9f757d9479240e26af',
            remotes = {'ipv6 "vpn5.kbu.freifunk.net" port 10010',
                       'ipv4 "vpn5.kbu.freifunk.net" port 10010'
                      },
          },
          peer6 = {
            key = 'f125456692a9804885ebc33375d0de6ac934b317fc45682849019704d8ee830d',
            remotes = {'ipv6 "vpn6.kbu.freifunk.net" port 10010',
                       'ipv4 "vpn6.kbu.freifunk.net" port 10010'
                      },
          },
          peer7 = {
            key = '389e8ebdf7a7329279b2eb006bd3cf92691eb26f3518e1c596b8634c9f0a3002',
            remotes = {'ipv6 "vpn7.kbu.freifunk.net" port 10010',
                       'ipv4 "vpn7.kbu.freifunk.net" port 10010'
                      },
          },
          peer8 = {
            key = 'f9dddb5a3f184fc3b10a6b16205c2392be4d11ae0af4901cb901f7f0d103333a',
            remotes = {'ipv6 "vpn8.kbu.freifunk.net" port 10010',
                       'ipv4 "vpn8.kbu.freifunk.net" port 10010'
                      },
          },
          peer9 = {
            key = 'f5e46569c4806ffe9f6321378e63ec0dba3963fc0d3f6220a4a412c84d455c95',
            remotes = {'ipv6 "vpn9.kbu.freifunk.net" port 10010',
                       'ipv4 "vpn9.kbu.freifunk.net" port 10010'
                      },
          },
        },
        -- Optional: nested peer groups
        -- groups = {
        --   backbone_sub = {
        --     ...
        --   },
        --   ...
        -- },
      },
      -- Optional: additional peer groups, possibly with other limits
      -- backbone2 = {
      --   ...
      -- },
    },
  },

  autoupdater = {
    branch = 'stable',
    branches = {
      stable = {
        name = 'stable',
        mirrors = {'http://'},
        good_signatures = 9001,
        pubkeys = {
                'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx', -- Alice
                'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx', -- Bob
                'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx', -- Mary
        },
      },
    },
  },

  -- Node roles
  -- roles = {
  --   default = 'node',
  --   list = {
  --     'node',
  --     'test',
  --     'backbone',
  --     'service',
  --   },
  -- },

  -- Bandwidth limiting
  simple_tc = {
    mesh_vpn = {
      ifname = 'mesh-vpn',
      enabled = false,
      limit_egress = 200,
      limit_ingress = 3000,
    },
  },
  setup_mode = {
  skip = true,
  },
}
